@model Doctor

@{
    ViewData["Title"] = "Create";
}

<head>
    <style>
        body {
            margin: 0;
            padding: 0;
            background-color: white;
            background: rgb(124,185,232);
            background: linear-gradient(90deg, rgba(124,185,232,1) 0%, rgba(0,39,86,1) 100%);
        }

        .card {
            padding: 35px;
            border: 2px solid lightgray;
            border-radius: 20px;
            box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.25);
            /*--Addition--*/
            margin: 0 auto;
            margin-top: 45px;
            margin-bottom: 45px;
            position: relative;
            top: 50%;
        }
    </style>
</head>
<body>

    <header class="card">
        <center><h1 style="font-weight: bold; font-family: Poppins; color:#002756">Create</h1></center>
        <hr />
        <p style="color: gray">Doctor > Create</p>
        <br />
        <form class="row g-3 needs-validation" style=" border: 2px solid lightgray;
    border-radius: 20px; padding: 35px;" novalidate asp-controller="Doctor" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="col-md-4">
                <div class="form-floating">
                    <input style="border-radius: 15px" asp-for="FirstName" class="form-control" placeholder=" " required>
                    <label asp-for="FirstName">First Name</label>
                    <span style="font-size:14px" asp-validation-for="FirstName" class="text-danger"></span>
                    <div class="invalid-feedback">
                        First name is required!
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-floating">
                    <input style="border-radius: 15px" asp-for="LastName" class="form-control" placeholder=" " required>
                    <label asp-for="LastName">Last Name</label>
                    <span style="font-size:14px" asp-validation-for="LastName" class="text-danger"></span>
                    <div class="invalid-feedback">
                        Last name is required!
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-floating">
                    <input style="border-radius: 15px" asp-for="Specialization" class="form-control" placeholder=" " required>
                    <label asp-for="Specialization">Specialization</label>
                    <span style="font-size:14px" asp-validation-for="Specialization" class="text-danger"></span>
                    <div class="invalid-feedback">
                        Specialization is required!
                    </div>
                </div>
            </div>

            <div class="col-12">
                <br />
                <button type="submit" class="btn btn-primary bg-blue">Create</button>
                <button onclick="history.go(-1)" class="btn btn-secondary">Cancel</button>
            </div>

        </form>
    </header>

</body>


<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
    })()

</script>